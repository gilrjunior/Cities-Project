package tela;

import javax.swing.table.DefaultTableModel;
import cidades.Cidades;
import cidadesDAO.CidadesDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.HashMap;
import java.util.Map;

//@author Ciraqui e Gilmas

public class Tela extends javax.swing.JFrame {
    
    DefaultTableModel dtm_tabela;
    CidadesDAO cidadesDAO;
    
    Map<String, Cidades> map1 = new HashMap<>();
    // Codigo / Cidade
    //  KEY     VALUE
    
    public Tela() {
        initComponents();
        
        jcbx_AtvEc.removeAllItems();
        jcbx_AtvEc.addItem("------------");
        jcbx_AtvEc.addItem("Agropecuária");
        jcbx_AtvEc.addItem("Indústria");
        jcbx_AtvEc.addItem("Prestação de Serviços");
        

        dtm_tabela = new DefaultTableModel(null, new String[]{"Código", "Nome", "Presença Bombeiro", "Presença Penitenciária", "Categoria deArrecadação", "Atividade Econômica", "Caixa", "Observações"});
    
        try{

             cidadesDAO = new CidadesDAO();

        }catch (SQLException | ClassNotFoundException ex){

            System.out.println("\n Erro ao conectar: "+ex.toString());

        }
        
        try {
            atualizarTabela(0);
        } catch (SQLException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        group_CtgArrec = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtf_codigo = new javax.swing.JTextField();
        jtf_nome = new javax.swing.JTextField();
        jtf_caixa = new javax.swing.JTextField();
        jrb_CA1 = new javax.swing.JRadioButton();
        jrb_CA2 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txA_observacoes = new javax.swing.JTextArea();
        jcb_BombTrue = new javax.swing.JCheckBox();
        jrb_CA3 = new javax.swing.JRadioButton();
        jcbx_AtvEc = new javax.swing.JComboBox<>();
        jcb_PenTrue = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtb_tabelaBanco = new javax.swing.JTable();
        jbt_inserir = new javax.swing.JButton();
        jbt_atualizar = new javax.swing.JButton();
        jbt_deletar = new javax.swing.JButton();
        jbt_ordenar = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Código");

        jLabel2.setText("Nome");

        jLabel3.setText("Categoria de Arrecadação");

        jLabel4.setText("Principal Atividade Econômica");

        jLabel5.setText("Caixa");

        jLabel6.setText("Presença Corpo de Bombeiros");

        jLabel7.setText("Presença de Penitenciaria");

        jtf_caixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_caixaActionPerformed(evt);
            }
        });

        group_CtgArrec.add(jrb_CA1);
        jrb_CA1.setText("Cidades com IDH acima de 0,8. ");

        group_CtgArrec.add(jrb_CA2);
        jrb_CA2.setText("Cidades com IDH acima de 0,7 e menor ou igual a 0,8.");
        jrb_CA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_CA2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Observações Importantes");

        txA_observacoes.setColumns(20);
        txA_observacoes.setRows(5);
        jScrollPane1.setViewportView(txA_observacoes);

        jcb_BombTrue.setText("Sim");

        group_CtgArrec.add(jrb_CA3);
        jrb_CA3.setText("Demais cidades");

        jcbx_AtvEc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcb_PenTrue.setText("Sim");

        jtb_tabelaBanco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Presença Bombeiro", "Presença Penitenciária", "Categoria deArrecadação", "Atividade Econômica", "Caixa", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtb_tabelaBanco);

        jbt_inserir.setText("Inserir");
        jbt_inserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_inserirActionPerformed(evt);
            }
        });

        jbt_atualizar.setText("Atualizar");
        jbt_atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_atualizarActionPerformed(evt);
            }
        });

        jbt_deletar.setText("Deletar");
        jbt_deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_deletarActionPerformed(evt);
            }
        });

        jbt_ordenar.setText("Ordenar");
        jbt_ordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_ordenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jrb_CA3)
                                    .addComponent(jcb_BombTrue)
                                    .addComponent(jrb_CA1)
                                    .addComponent(jrb_CA2)
                                    .addComponent(jcb_PenTrue)
                                    .addComponent(jcbx_AtvEc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtf_codigo)
                                    .addComponent(jtf_nome)
                                    .addComponent(jtf_caixa)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbt_inserir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbt_deletar, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbt_atualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(jbt_ordenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1))
                        .addGap(0, 105, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcb_BombTrue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcb_PenTrue))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jrb_CA1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrb_CA2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrb_CA3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbx_AtvEc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtf_caixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_inserir)
                    .addComponent(jbt_atualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_deletar)
                    .addComponent(jbt_ordenar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrb_CA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_CA2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_CA2ActionPerformed

    private void jtf_caixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_caixaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_caixaActionPerformed

    private void jbt_inserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_inserirActionPerformed
        
        int Arrec = 0;
        int AtvEC = 0;
        
        if(jrb_CA1.isSelected()){
            Arrec = 1;
        }
        if(jrb_CA2.isSelected()){
            Arrec = 2;
        }
        if(jrb_CA3.isSelected()){
            Arrec = 3;
        }
        
        if(jcbx_AtvEc.getSelectedItem().toString().equals("Agropecuária")){
            AtvEC = 1; 
        }
        
        if(jcbx_AtvEc.getSelectedItem().toString().equals("Indústria")){
            AtvEC = 2;
        }
        
        if(jcbx_AtvEc.getSelectedItem().toString().equals("Prestação de Serviços")){
            AtvEC = 3;
        }
        
        String s_dados = txA_observacoes.getText();
        String linhas[] = s_dados.split("\n");;
        s_dados = "";
        for (String linha : linhas) {
            
            s_dados = s_dados.concat(linha);
            s_dados = s_dados.concat(" ");
        }
        
        Cidades cidades = new Cidades(jtf_codigo.getText(), jtf_nome.getText(), jcb_BombTrue.isSelected(), jcb_PenTrue.isSelected(), Arrec, AtvEC, (Float.parseFloat(jtf_caixa.getText())), s_dados);
              
        cidadesDAO.insertCidade(cidades);
        map1.put(cidades.getCodigo(), cidades);
        
        try {
            atualizarTabela(0);
        } catch (SQLException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
                
        limpar_tela();
        
    }//GEN-LAST:event_jbt_inserirActionPerformed

    private void jbt_atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_atualizarActionPerformed
        
        int Arrec = 0;
        int AtvEC = 0;
        
        if(jrb_CA1.isSelected()){
            Arrec = 1;
        }
        if(jrb_CA2.isSelected()){
            Arrec = 2;
        }
        if(jrb_CA3.isSelected()){
            Arrec = 3;
        }
        
        if(jcbx_AtvEc.getSelectedItem().toString() == "Agropecuária"){
            AtvEC = 1; 
        }
        
        if(jcbx_AtvEc.getSelectedItem().toString() == "Indústria"){
            AtvEC = 2;
        }
        
        if(jcbx_AtvEc.getSelectedItem().toString() == "Prestação de Serviços"){
            AtvEC = 3;
        }
        
        String s_dados = txA_observacoes.getText();
        String linhas[] = s_dados.split("\n");;
        s_dados = "";
        for (String linha : linhas) {
            
            s_dados = s_dados.concat(linha);
        }
        
        Cidades cidades = new Cidades(jtf_codigo.getText(), jtf_nome.getText(), jcb_BombTrue.isSelected(), jcb_PenTrue.isSelected(), Arrec, AtvEC, (Float.parseFloat(jtf_caixa.getText())), s_dados);
        
        cidadesDAO.updateCidade(cidades);   
        for(Map.Entry<String, Cidades> entry : map1.entrySet()){                                
            if(entry.getKey().equals(jtf_codigo.getText())){
                map1.put(jtf_codigo.getText(), cidades);
            }
       }
           
        try {
            atualizarTabela(0);
        } catch (SQLException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        limpar_tela();
    }//GEN-LAST:event_jbt_atualizarActionPerformed

    private void jbt_deletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_deletarActionPerformed
        
       cidadesDAO.excluirCidade(jtf_codigo.getText());
       for(Map.Entry<String, Cidades> entry : map1.entrySet()){                                
            if(entry.getKey().equals(jtf_codigo.getText())){
                map1.remove(entry.getKey());
            }
       }
       
       try {
            atualizarTabela(0);
        } catch (SQLException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       limpar_tela();
    }//GEN-LAST:event_jbt_deletarActionPerformed

    private void jbt_ordenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_ordenarActionPerformed
        
        try {
            atualizarTabela(1);
        } catch (SQLException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        limpar_tela();
        
    }//GEN-LAST:event_jbt_ordenarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }
    
    public void limpar_tela(){
        
        jtf_codigo.setText("");
        jtf_nome.setText("");
        jcb_BombTrue.setSelected(false);
        jcb_PenTrue.setSelected(false);
        jrb_CA1.setSelected(false);
        jrb_CA2.setSelected(false);
        jrb_CA3.setSelected(false);
        jcbx_AtvEc.setSelectedIndex(0);
        jtf_caixa.setText("");
        txA_observacoes.setText("");
        
    }
    
    public void atualizarTabela(int att) throws SQLException , ClassNotFoundException{
        
        ArrayList <Cidades> listaCidades;
        jtb_tabelaBanco.setModel(dtm_tabela);
        dtm_tabela.setNumRows(0);
        listaCidades = cidadesDAO.mostraCidades(att);
        
        for(Cidades cidades : listaCidades){
            
            dtm_tabela.addRow(new Object[]{cidades.getCodigo(), cidades.getNome(), cidades.isPresencaDoCorpoDeBombeiros(), cidades.isPresencaDePenitenciaria(), cidades.getCategoriaDeArrecadacao(), cidades.getPrincipalAtividadeEconomica(), cidades.getCaixa(), cidades.getObservacoes_importantes()});
            
        }
              
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup group_CtgArrec;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbt_atualizar;
    private javax.swing.JButton jbt_deletar;
    private javax.swing.JButton jbt_inserir;
    private javax.swing.JButton jbt_ordenar;
    private javax.swing.JCheckBox jcb_BombTrue;
    private javax.swing.JCheckBox jcb_PenTrue;
    private javax.swing.JComboBox<String> jcbx_AtvEc;
    private javax.swing.JRadioButton jrb_CA1;
    private javax.swing.JRadioButton jrb_CA2;
    private javax.swing.JRadioButton jrb_CA3;
    private javax.swing.JTable jtb_tabelaBanco;
    private javax.swing.JTextField jtf_caixa;
    private javax.swing.JTextField jtf_codigo;
    private javax.swing.JTextField jtf_nome;
    private javax.swing.JTextArea txA_observacoes;
    // End of variables declaration//GEN-END:variables
}
